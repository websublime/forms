import{_ as n,c as s,o as a,a as t}from"./app.2931ab38.js";const h='{"title":"FormControl","description":"","frontmatter":{},"headers":[{"level":2,"title":"Validation","slug":"validation"},{"level":2,"title":"Change state","slug":"change-state"}],"relativePath":"guide/form-control.md"}',p={},o=t(`<h1 id="formcontrol" tabindex="-1">FormControl <a class="header-anchor" href="#formcontrol" aria-hidden="true">#</a></h1><p>FormControl is used to map properties in an object model.</p><p>Most of the UI components will be linked to this control.</p><h2 id="validation" tabindex="-1">Validation <a class="header-anchor" href="#validation" aria-hidden="true">#</a></h2><p>To create any form object model, we need first to create a validation schema.</p><p>The follwing code create a validation schema for a property that must be of type <code>number</code>, is <code>required</code> and the <code>max</code> value is <code>10</code></p><div class="language-typescript"><pre><code><span class="token keyword">const</span> schema <span class="token operator">=</span> <span class="token function">NumberType</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">isRequired</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>Then we can create a FormControl for this validation schema.</p><div class="language-typescript"><pre><code><span class="token keyword">const</span> control <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span>schema<span class="token punctuation">)</span><span class="token punctuation">;</span>

control<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// does not trigger a validation</span>

<span class="token function">expect</span><span class="token punctuation">(</span>control<span class="token punctuation">.</span>isValid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeTruthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span>control<span class="token punctuation">.</span>hasErrors<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeFalsy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> control<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">expect</span><span class="token punctuation">(</span>control<span class="token punctuation">.</span>isValid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeFalsy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span>control<span class="token punctuation">.</span>hasErrors<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeTruthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>control<span class="token punctuation">.</span>errors<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>i18n<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ERRORS.NUMBER.MAX</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>control<span class="token punctuation">.</span>errors<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>constraints<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { max: 10 }</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>control<span class="token punctuation">.</span>errors<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 11</span>
</code></pre></div><div class="info custom-block"><p class="custom-block-title">Note</p><p>Setting a value do not trigger the validation</p></div><h2 id="change-state" tabindex="-1">Change state <a class="header-anchor" href="#change-state" aria-hidden="true">#</a></h2><p>The following code show that setting data to be validated or executing validation do not change the control state for <code>isDirty</code>, <code>isPrestine</code> or <code>isTouch</code></p><p>We have methods to form the change of these states:</p><ul><li><strong>setDirty</strong></li><li><strong>setFocus</strong></li><li><strong>setTouch</strong></li></ul><div class="info custom-block"><p class="custom-block-title">Note</p><p>If the control has a parent (belong to a <code>FormGroup</code> or <code>FormArray</code>) the state will be propagated until the root.</p></div><div class="language-typescript"><pre><code><span class="token keyword">const</span> schema <span class="token operator">=</span> <span class="token function">NumberType</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">isRequired</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> control <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormControl</span><span class="token punctuation">(</span>schema<span class="token punctuation">)</span><span class="token punctuation">;</span>

control<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// do not change control state</span>

<span class="token function">expect</span><span class="token punctuation">(</span>control<span class="token punctuation">.</span>isDirty<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeFalsy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span>control<span class="token punctuation">.</span>isPrestine<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeTruthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span>control<span class="token punctuation">.</span>isTouch<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeFalsy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span>control<span class="token punctuation">.</span>isValid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeTruthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> control<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// only change isValid</span>

<span class="token function">expect</span><span class="token punctuation">(</span>control<span class="token punctuation">.</span>isDirty<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeFalsy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span>control<span class="token punctuation">.</span>isPrestine<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeTruthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span>control<span class="token punctuation">.</span>isTouch<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeFalsy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span>control<span class="token punctuation">.</span>isValid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeFalsy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Changed</span>

control<span class="token punctuation">.</span><span class="token function">setDirty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">expect</span><span class="token punctuation">(</span>control<span class="token punctuation">.</span>isDirty<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeTruthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span>control<span class="token punctuation">.</span>isPrestine<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeFalsy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span>control<span class="token punctuation">.</span>isTouch<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeTruthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">expect</span><span class="token punctuation">(</span>control<span class="token punctuation">.</span>isValid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeFalsy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,16),c=[o];function e(u,l,i,k,r,d){return a(),s("div",null,c)}var m=n(p,[["render",e]]);export{h as __pageData,m as default};
